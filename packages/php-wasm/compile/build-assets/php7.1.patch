diff --git a/php-src/ext/pdo_sqlite/sqlite_statement.c b/php-src/ext/pdo_sqlite/sqlite_statement.c
--- a/php-src/ext/pdo_sqlite/sqlite_statement.c
+++ b/php-src/ext/pdo_sqlite/sqlite_statement.c
@@ -299,7 +299,7 @@ static int pdo_sqlite_stmt_describe(pdo_stmt_t *stmt, int colno)
 	return 1;
 }
 
-static int pdo_sqlite_stmt_get_col(pdo_stmt_t *stmt, int colno, char **ptr, zend_ulong *len, int *caller_frees)
+static int pdo_sqlite_stmt_get_col(pdo_stmt_t *stmt, int colno, char **ptr, size_t *len, int *caller_frees)
 {
 	pdo_sqlite_stmt *S = (pdo_sqlite_stmt*)stmt->driver_data;
 	if (!S->stmt) {


diff --git a/php-src/ext/standard/file.c b/php-src/ext/standard/file.c
--- a/php-src/ext/standard/file.c
+++ b/php-src/ext/standard/file.c
@@ -1691,18 +1691,32 @@ PHPAPI int php_copy_file_ctx(const char *src, const char *dest, int src_flg, php
 	php_stream *srcstream = NULL, *deststream = NULL;
 	int ret = FAILURE;
 	php_stream_statbuf src_s, dest_s;
 
 	switch (php_stream_stat_path_ex(src, 0, &src_s, ctx)) {
 		case -1:
 			/* non-statable stream */
 			goto safe_to_copy;
 			break;
 		case 0:
+			// Fix for https://github.com/WordPress/wordpress-playground/issues/54:
+			// Problem: Calling copy() on an empty source file crashes the JavaScript
+			//          runtime.
+			// Solution: Avoid copying empty files. Just create create an empty
+			//           destination file and return.
+			if (src_s.sb.st_size == 0) {
+				zend_string *opened_path = zend_string_init("", strlen(""), 0);
+				php_stream *stream = php_stream_open_wrapper(dest, "w", REPORT_ERRORS, &opened_path);
+				if (stream) {
+					php_stream_close(stream);
+					return SUCCESS;
+				}
+				return FAILURE;
+			}
 			break;
 		default: /* failed to stat file, does not exist? */
 			return ret;
 	}
 	if (S_ISDIR(src_s.sb.st_mode)) {
 		php_error_docref(NULL, E_WARNING, "The first argument to copy() function cannot be a directory");
 		return FAILURE;
 	}
diff --git a/php-src/main/streams/cast.c b/php-src/main/streams/cast.c
--- a/php-src/main/streams/cast.c
+++ b/php-src/main/streams/cast.c
@@ -113,10 +113,10 @@ static int stream_cookie_seeker(void *cookie, __off64_t *position, int whence)
 	return 0;
 }
 # else
-static int stream_cookie_seeker(void *cookie, zend_off_t position, int whence)
+static int stream_cookie_seeker(void *cookie, long long *position, int whence)
 {
 
-	return php_stream_seek((php_stream *)cookie, position, whence);
+	return php_stream_seek((php_stream *)cookie, *position, whence);
 }
 # endif
 
diff --git a/php-src/ext/date/lib/timelib.h b/php-src/ext/date/lib/timelib.h
index c9b3928799..97bbccc232 100644
--- a/php-src/ext/date/lib/timelib.h
+++ b/php-src/ext/date/lib/timelib.h
@@ -103,7 +103,7 @@ typedef unsigned __int64  uint64_t;
 # endif
 #endif
 
-#if (defined(__x86_64__) || defined(__LP64__) || defined(_LP64) || defined(_WIN64)) && !defined(TIMELIB_FORCE_LONG32)
+#if true
 typedef int64_t timelib_long;
 typedef uint64_t timelib_ulong;
 # define TIMELIB_LONG_MAX INT64_MAX
@@ -121,10 +121,10 @@ typedef uint32_t timelib_ulong;
 # define TIMELIB_ULONG_FMT "%" PRIu32
 #endif
 
-#if defined(_MSC_VER)
+#if true
 typedef uint64_t timelib_ull;
 typedef int64_t timelib_sll;
-# define TIMELIB_LL_CONST(n) n ## i64
+# define TIMELIB_LL_CONST(n) n ## ll
 #else
 typedef unsigned long long timelib_ull;
 typedef signed long long timelib_sll;
diff --git a/php-src/ext/date/php_date.c b/php-src/ext/date/php_date.c
index fdf84f6056..a94b1958c3 100644
--- a/php-src/ext/date/php_date.c
+++ b/php-src/ext/date/php_date.c
@@ -1502,7 +1502,8 @@ PHP_FUNCTION(strtotime)
 	zend_string *times;
 	int error1, error2;
 	timelib_error_container *error;
-	zend_long preset_ts = 0, ts;
+	zend_long preset_ts = 0;
+	double ts;
 	timelib_time *t, *now;
 	timelib_tzinfo *tzi;
 
@@ -1526,7 +1527,7 @@ PHP_FUNCTION(strtotime)
 	timelib_error_container_dtor(error);
 	timelib_fill_holes(t, now, TIMELIB_NO_CLONE);
 	timelib_update_ts(t, tzi);
-	ts = timelib_date_to_int(t, &error2);
+	ts = (double)timelib_date_to_int(t, &error2);
 
 	timelib_time_dtor(now);
 	timelib_time_dtor(t);
@@ -1534,7 +1535,7 @@ PHP_FUNCTION(strtotime)
 	if (error1 || error2) {
 		RETURN_FALSE;
 	} else {
-		RETURN_LONG(ts);
+		RETURN_DOUBLE(ts);
 	}
 }
 /* }}} */
