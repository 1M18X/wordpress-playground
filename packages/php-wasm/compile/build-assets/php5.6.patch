diff --git a/php-src/ext/mbstring/libmbfl/filters/mbfilter_utf8_mobile.c b/php-src/ext/mbstring/libmbfl/filters/mbfilter_utf8_mobile.c
--- a/php-src/ext/mbstring/libmbfl/filters/mbfilter_utf8_mobile.c	2023-01-18 15:22:55
+++ b/php-src/ext/mbstring/libmbfl/filters/mbfilter_utf8_mobile.c	2023-01-18 15:22:57
@@ -39,8 +39,9 @@
 extern int mbfl_filt_ident_utf8(int c, mbfl_identify_filter *filter);
 extern int mbfl_filt_conv_utf8_wchar_flush(mbfl_convert_filter *filter);
+extern int mbfl_filt_put_invalid_char(int c, mbfl_convert_filter *filter);

 extern const unsigned char mblen_table_utf8[];

 static const char *mbfl_encoding_utf8_docomo_aliases[] = {"UTF-8-DOCOMO", "UTF8-DOCOMO", NULL};
 static const char *mbfl_encoding_utf8_kddi_a_aliases[] = {NULL};
 static const char *mbfl_encoding_utf8_kddi_b_aliases[] = {"UTF-8-Mobile#KDDI", "UTF-8-KDDI", "UTF8-KDDI", NULL};
diff --git a/php-src/ext/pcre/pcrelib/config.h b/php-src/ext/pcre/pcrelib/config.h
index 0f7a9f73ff..b67dcfa94d 100644
--- a/php-src/ext/pcre/pcrelib/config.h
+++ b/php-src/ext/pcre/pcrelib/config.h
@@ -397,7 +397,7 @@ them both to 0; an emulation function will be used. */
 #undef SUPPORT_GCOV
 
 /* Define to any value to enable support for Just-In-Time compiling. */
-#define SUPPORT_JIT
+#undef SUPPORT_JIT
 
 /* Define to any value to allow pcregrep to be linked with libbz2, so that it
    is able to handle .bz2 files. */
diff --git a/php-src/ext/pcre/pcrelib/sljit/sljitLir.c b/php-src/ext/pcre/pcrelib/sljit/sljitLir.c
index 0f1b1c9cce..2263f97574 100644
--- a/php-src/ext/pcre/pcrelib/sljit/sljitLir.c
+++ b/php-src/ext/pcre/pcrelib/sljit/sljitLir.c
@@ -1715,12 +1715,6 @@ SLJIT_API_FUNC_ATTRIBUTE SLJIT_CONST char* sljit_get_platform_name(void)
 	return "unsupported";
 }
 
-SLJIT_API_FUNC_ATTRIBUTE struct sljit_compiler* sljit_create_compiler(void)
-{
-	SLJIT_ASSERT_STOP();
-	return NULL;
-}
-
 SLJIT_API_FUNC_ATTRIBUTE void sljit_free_compiler(struct sljit_compiler *compiler)
 {
 	SLJIT_UNUSED_ARG(compiler);
diff --git a/php-src/ext/pcre/pcrelib/sljit/sljitConfigInternal.h b/php-src/ext/pcre/pcrelib/sljit/sljitConfigInternal.h
index 16e3547c93..1b7934f095 100644
--- a/php-src/ext/pcre/pcrelib/sljit/sljitConfigInternal.h
+++ b/php-src/ext/pcre/pcrelib/sljit/sljitConfigInternal.h
@@ -126,7 +126,7 @@
 #else
 #define SLJIT_CONFIG_ARM_V5 1
 #endif
-#elif defined (__aarch64__)
+#elif defined(__aarch64__) || defined(__arm64__) || defined(__arm64) || defined(__aarch32__)
 #define SLJIT_CONFIG_ARM_64 1
 #elif defined(__ppc64__) || defined(__powerpc64__) || defined(_ARCH_PPC64) || (defined(_POWER) && defined(__64BIT__))
 #define SLJIT_CONFIG_PPC_64 1

diff --git a/php-src/main/streams/cast.c b/php-src/main/streams/cast.c
index 0603a7212b..2c191bc8be 100644
--- a/php-src/main/streams/cast.c
+++ b/php-src/main/streams/cast.c
@@ -122,11 +122,11 @@ static int stream_cookie_seeker(void *cookie, __off64_t *position, int whence)
 	return 0;
 }
 # else
-static int stream_cookie_seeker(void *cookie, off_t position, int whence)
+static int stream_cookie_seeker(void *cookie, off_t *position, int whence)
 {
 	TSRMLS_FETCH();
 
-	return php_stream_seek((php_stream *)cookie, position, whence);
+	return php_stream_seek((php_stream *)cookie, *position, whence);
 }
 # endif
 
diff --git a/php-src/ext/date/lib/timelib_structs.h b/php-src/ext/date/lib/timelib_structs.h
index 91fcac9119..12cd932f7f 100644
--- a/php-src/ext/date/lib/timelib_structs.h
+++ b/php-src/ext/date/lib/timelib_structs.h
@@ -125,7 +125,7 @@ typedef unsigned __int64  uint64_t;
 #include <strings.h>
 #endif
 
-#if (defined(__x86_64__) || defined(__LP64__) || defined(_LP64) || defined(_WIN64)) && !defined(TIMELIB_FORCE_LONG32)
+#if true
 typedef int64_t timelib_long;
 typedef uint64_t timelib_ulong;
 # define TIMELIB_LONG_MAX INT64_MAX
@@ -143,10 +143,10 @@ typedef uint32_t timelib_ulong;
 # define TIMELIB_ULONG_FMT "%" PRIu32
 #endif
 
-#if defined(_MSC_VER)
+#if true
 typedef uint64_t timelib_ull;
 typedef int64_t timelib_sll;
-# define TIMELIB_LL_CONST(n) n ## i64
+# define TIMELIB_LL_CONST(n) n ## ll
 #else
 typedef unsigned long long timelib_ull;
 typedef signed long long timelib_sll;
diff --git a/php-src/ext/date/php_date.c b/php-src/ext/date/php_date.c
index 801208d714..640b8a8c33 100644
--- a/php-src/ext/date/php_date.c
+++ b/php-src/ext/date/php_date.c
@@ -1454,9 +1454,11 @@ PHP_FUNCTION(strtotime)
 	char *times, *initial_ts;
 	int   time_len, error1, error2;
 	struct timelib_error_container *error;
-	long  preset_ts = 0, ts;
+	long  preset_ts = 0;
+	double ts;
+	double t;
 
-	timelib_time *t, *now;
+	timelib_time *now;
 	timelib_tzinfo *tzi;
 
 	tzi = get_timezone_info(TSRMLS_C);
@@ -1467,7 +1469,7 @@ PHP_FUNCTION(strtotime)
 
 		initial_ts = emalloc(25);
 		snprintf(initial_ts, 24, "@%ld UTC", preset_ts);
-		t = timelib_strtotime(initial_ts, strlen(initial_ts), NULL, DATE_TIMEZONEDB, php_date_parse_tzfile_wrapper); /* we ignore the error here, as this should never fail */
+		t = (double)timelib_strtotime(initial_ts, strlen(initial_ts), NULL, DATE_TIMEZONEDB, php_date_parse_tzfile_wrapper); /* we ignore the error here, as this should never fail */
 		timelib_update_ts(t, tzi);
 		now->tz_info = tzi;
 		now->zone_type = TIMELIB_ZONETYPE_ID;
@@ -1489,12 +1491,12 @@ PHP_FUNCTION(strtotime)
 		RETURN_FALSE;
 	}
 
-	t = timelib_strtotime(times, time_len, &error, DATE_TIMEZONEDB, php_date_parse_tzfile_wrapper);
+	t = (double)timelib_strtotime(times, time_len, &error, DATE_TIMEZONEDB, php_date_parse_tzfile_wrapper);
 	error1 = error->error_count;
 	timelib_error_container_dtor(error);
 	timelib_fill_holes(t, now, TIMELIB_NO_CLONE);
 	timelib_update_ts(t, tzi);
-	ts = timelib_date_to_int(t, &error2);
+	ts = (double)timelib_date_to_int(t, &error2);
 
 	timelib_time_dtor(now);
 	timelib_time_dtor(t);
@@ -1502,7 +1504,7 @@ PHP_FUNCTION(strtotime)
 	if (error1 || error2) {
 		RETURN_FALSE;
 	} else {
-		RETURN_LONG(ts);
+		RETURN_DOUBLE(ts);
 	}
 }
 /* }}} */
